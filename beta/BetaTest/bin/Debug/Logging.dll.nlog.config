<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <extensions>
    <add assembly="Logging" />
    <!--Contains GibraltarTarget class marked as "Gibraltar" target type-->
  </extensions>

  <targets async="false">
    <target name="logfile" xsi:type="File"
            fileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecovery.log"
            archiveFileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecovery.{##}.log"
            archiveNumbering="Rolling"
            maxArchiveFiles="3"
            archiveAboveSize="26214400"
            concurrentWriteAttemptDelay="10"
            enableFileDelete="false"
            keepFileOpen="false" 
            encoding="utf-8"
            layout="${pad:padding=-5:inner=${level:upperCase=true}} ${date:format=s} [${threadid}] - ${logger} (${ndc})${newline}${message}${newline}${onexception:Exception: ${exception:format=tostring}${newline}}"
    />

    <target name="httpRequestProcessorLogFile" xsi:type="File"
            fileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecoveryHttpRequests.log"
            archiveFileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecoveryHttpRequests.{##}.log"
            archiveNumbering="Rolling"
            maxArchiveFiles="3"
            archiveAboveSize="26214400"
            concurrentWriteAttemptDelay="10"
            enableFileDelete="false"
            keepFileOpen="false"
            encoding="utf-8"
            layout="${pad:padding=-5:inner=${level:upperCase=true}} ${date:format=s} [${threadid}] - ${logger} (${ndc})${newline}${message}${newline}${onexception:Exception: ${exception:format=tostring}${newline}}"
    />

    <target name="o3ePerformanceLogFile" xsi:type="File"
            fileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecoveryO3EPerformance.log"
            archiveFileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecoveryO3EPerformance.{##}.log"
            archiveNumbering="Rolling"
            maxArchiveFiles="3"
            archiveAboveSize="26214400"
            concurrentWriteAttemptDelay="10"
            enableFileDelete="false"
            keepFileOpen="false"
            encoding="utf-8"
            layout="${pad:padding=-5:inner=${level:upperCase=true}} ${date:format=s} [${threadid}] - ${logger} (${ndc})${newline}${message}${newline}${onexception:Exception: ${exception:format=tostring}${newline}}"
    />

    <target name="backupPerformanceLogFile" xsi:type="File"
            fileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecoveryBackupPerformance.log"
            archiveFileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecoveryBackupPerformance.{##}.log"
            archiveNumbering="Rolling"
            maxArchiveFiles="3"
            archiveAboveSize="26214400"
            concurrentWriteAttemptDelay="10"
            enableFileDelete="false"
            keepFileOpen="false"
            encoding="utf-8"
            layout="${pad:padding=-5:inner=${level:upperCase=true}} ${date:format=s} [${threadid}] - ${logger} (${ndc})${newline}${message}${newline}${onexception:Exception: ${exception:format=tostring}${newline}}"
    />

    <target name="RollupLogFile" xsi:type="File"
            fileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecoveryRollupLogFile.log"
            archiveFileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecoveryRollupLogFile.{##}.log"
            archiveNumbering="Rolling"
            maxArchiveFiles="9"
            archiveAboveSize="104857600"
            concurrentWriteAttemptDelay="10"
            enableFileDelete="false"
            keepFileOpen="false"
            encoding="utf-8"
            layout="${pad:padding=-5:inner=${level:upperCase=true}} ${date:format=s} [${threadid}] - ${logger} (${ndc})${newline}${message}${newline}${onexception:Exception: ${exception:format=tostring}${newline}}"
   />

    <target name="dbPerformanceLogFile" xsi:type="File"
            fileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecoveryDBPerformance.log"
            archiveFileName="${specialfolder:folder=CommonApplicationData}\AppRecovery\Logs\AppRecoveryDBPerformance.{##}.log"
            archiveNumbering="Rolling"
            maxArchiveFiles="3"
            archiveAboveSize="26214400"
            concurrentWriteAttemptDelay="10"
            enableFileDelete="false"
            keepFileOpen="false"
            encoding="utf-8"
            layout="${pad:padding=-5:inner=${level:upperCase=true}} ${date:format=s}${newline}${message}"
    />

    <target name="console" 
            xsi:type="ColoredConsole"
            layout="${pad:padding=-5:inner=${level:upperCase=true}} ${date:format=s} ${logger} (${ndc})${newline}${message}${newline}${onexception:Exception: ${exception:format=tostring}${newline}}"
            useDefaultRowHighlightingRules="true">
        <highlight-row foregroundColor="Red" condition="level == LogLevel.Error" />
        <highlight-row foregroundColor="Yellow" condition="level == LogLevel.Warn" />
        <highlight-row foregroundColor="Green" condition="level == LogLevel.Info" />
        <highlight-row foregroundColor="White" condition="level == LogLevel.Debug" />
    </target>
    
    <target name="gibraltar" xsi:type="Gibraltar" />
  </targets>

  <rules>
    <!-- TODO: At the time of this writing it appeared the upcoming NLog 2.0 would be flexible
    enough to allow different layouts depending upon whether or not things like ${exception} were present.  It would be good
    to have that working so we don't have 'Exception: ' in all the log messages unnecessarily. -->
    
    <!-- Log messages that come from the logging framework itself should not go to Gibraltar, as that could
    lead to infinite recursion and the destruction of the space-time continuum-->
    <logger name="Replay.Logging.*" minLevel="Debug" writeTo="logfile,console" final="true">
    </logger>
    <logger name="Performance.O3E" minLevel="Debug" writeTo="o3ePerformanceLogFile" final="true">
    </logger>
    <!-- Performance metric logging is very spammy and not good for you like bacon-->
    <logger name="Performance.*" minLevel="Debug" writeTo="gibraltar,console" final="true">
    </logger>
    <logger name="HttpRequestProcessor.*" minLevel="Debug" writeTo="httpRequestProcessorLogFile" final="true">
    </logger>
    <logger name="InMemoryHosting.*" minLevel="Debug" writeTo="httpRequestProcessorLogFile" final="true">
    </logger>
    <logger name="Rollup.*" minLevel="Trace" writeTo="RollupLogFile" final="true">
    </logger>
    <logger name="Backup.*" minLevel="Info" writeTo="backupPerformanceLogFile" final="true">
    </logger>
    <logger name="Performance.Database" minLevel="Debug" writeTo="dbPerformanceLogFile" final="true">
    </logger>
    <logger name="ProductionExceptions" minLevel="Info" final="false">
    </logger>
    <logger name="*" minLevel="Debug" writeTo="logfile,console,gibraltar">
      <!-- 
      <filters>
        <when condition="length('${exception}') != 0" action="IgnoreFinal" />
      </filters>
      -->
    </logger>
  </rules>
</nlog>
